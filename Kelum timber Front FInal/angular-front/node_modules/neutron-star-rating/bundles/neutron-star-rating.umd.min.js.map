{
  "version": 3,
  "file": "neutron-star-rating.umd.min.js",
  "sources": [
    "ng://neutron-star-rating/src/app/modules/neutron-rating/neutron-rating.component.ts"
  ],
  "sourcesContent": [
    "import { Component, OnInit, OnChanges, Input, EventEmitter, Output, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'neutron-rating',\n  template: `<div class=\"crop\" [ngClass]=\"{'clickable': !readOnly}\" [title]=\"rating?rating:''\" (mouseleave)=\"onHoverExitEvent()\">\n  <div [style.font-size.em]=\"starSize?starSize:1\">\n    <div>\n      <span *ngFor=\"let singleRating of ratingArr; let i = index\">\n        <a [style.color]=\"starColour?starColour:'yellow'\" (click)=\"passNewRating(i+1)\" (mouseenter)=\"onHoverEvent(i+1)\">{{singleRating}}</a>\n      </span>\n    </div>\n  </div>\n</div>\n\n<!-- <fa name=\"star\" style=\"color: #FDD835; font-size: 4em;\"></fa> (mouseleave) =\"onHoverExitEvent($event)\" (mouseover)=\"overStars($event)\" (mousemove)=\"changeHovered($event)\" -->\n`,\n  styles: [`.crop {\n  overflow: hidden;\n}\n.clickable {\n  cursor: pointer;\n}\n`]\n})\nexport class NeutronRatingComponent implements OnInit {\n\n  constructor() { }\n\n  public fullIcon = \"★\";\n  public emptyIcon = \"☆\";\n\n  public starWidth: number;\n  public ratingArr: any = []\n  public existingRatingArr = [];\n  public initialHoveredRating;\n  @Input() rating: number;\n  @Input() starSize: number;\n  @Input() starColour: any;\n  @Input() starNum: number;\n  @Input() readOnly: boolean;\n\n  @Output() ratingClicked: EventEmitter<number> =\n    new EventEmitter<number>()\n\n  ngOnInit(): void {\n\n    this.initializeStars();\n  }\n\n  ngOnChanges(): void {\n\n  }\n\n  public initializeStars = () => {\n\n    this.rating = Math.floor(this.rating);\n\n    let numberOfStars = (this.starNum) ? this.starNum : 5;\n\n    let newRating = (this.rating > numberOfStars) ? numberOfStars : this.rating;\n\n    if (this.rating > numberOfStars) {\n\n      console.log(\"Warning: your rating exceeds the number of stars hence the rating = number of stars \");\n    } else { }\n\n    for (let i = 0; i < newRating; i++) {\n\n      this.ratingArr.push(this.fullIcon);\n    }\n\n    let ratingLeft = numberOfStars - this.rating;\n\n    for (let j = 0; j < ratingLeft; j++) {\n\n      this.ratingArr.push(this.emptyIcon)\n    }\n\n    this.existingRatingArr = this.ratingArr;\n\n    console.log(this.ratingArr);\n  }\n\n  public passNewRating: any = (newRating) => {\n\n    if (!this.readOnly) {\n      let numberOfStars = (this.starNum) ? this.starNum : 5;\n\n      newRating = (newRating > numberOfStars) ? numberOfStars : newRating;\n\n      newRating = Math.floor(newRating);\n\n      this.rating = newRating;\n\n      //console.log(\"new rating is \" + newRating);\n\n      this.ratingArr = [];\n\n      for (let i = 0; i < newRating; i++) {\n\n        this.ratingArr.push(this.fullIcon);\n      }\n\n      let ratingLeft = numberOfStars - newRating;\n\n      for (let j = 0; j < ratingLeft; j++) {\n\n        this.ratingArr.push(this.emptyIcon)\n      }\n\n      this.ratingClicked.emit(newRating)\n\n      this.existingRatingArr = this.ratingArr;\n    }\n    return;\n  }\n\n  public onHoverEvent: any = (hoveredRating) => {\n\n    if (!this.readOnly) {\n      let numberOfStars = (this.starNum) ? this.starNum : 5;\n\n      this.ratingArr = [];\n\n      for (let i = 0; i < hoveredRating; i++) {\n\n        this.ratingArr.push(this.fullIcon);\n      }\n\n      let ratingLeft = numberOfStars - hoveredRating;\n\n      for (let j = 0; j < ratingLeft; j++) {\n\n        this.ratingArr.push(this.emptyIcon)\n      }\n\n      this.initialHoveredRating = hoveredRating;\n    }\n    return;\n  }\n\n  // @HostListener('mouseenter') onMouseEnter(something) {\n\n  //   console.log(\"bla bla is \"+something);\n  // }\n\n  public changeHovered: any = (a) => {\n\n    //console.log(\"moving 1\");\n    //console.log(a);\n  }\n\n  public overStars = ($event) => {\n\n  }\n\n\n  public onHoverExitEvent: any = () => {\n\n    this.ratingArr = this.existingRatingArr;\n  }\n\n}\n\n"
  ],
  "names": [
    "NeutronRatingComponent",
    "_this",
    "this",
    "fullIcon",
    "emptyIcon",
    "ratingArr",
    "existingRatingArr",
    "ratingClicked",
    "EventEmitter",
    "initializeStars",
    "rating",
    "Math",
    "floor",
    "numberOfStars",
    "starNum",
    "newRating",
    "console",
    "log",
    "i",
    "push",
    "ratingLeft",
    "j",
    "passNewRating",
    "readOnly",
    "emit",
    "onHoverEvent",
    "hoveredRating",
    "initialHoveredRating",
    "changeHovered",
    "a",
    "overStars",
    "$event",
    "onHoverExitEvent",
    "prototype",
    "ngOnInit",
    "ngOnChanges",
    "decorators",
    "type",
    "Component",
    "args",
    "selector",
    "Input",
    "NeutronRatingModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations"
  ],
  "mappings": "0UAAA,SAAAA,IA0BA,IAAAC,EAAAC,KAEAA,KAAAC,SAAoB,IACpBD,KAAAE,UAAqB,IAGrBF,KAAAG,aACAH,KAAAI,qBASAJ,KAAAK,cAAI,IAAIC,EAAAA,aAWRN,KAAAO,gBAA2B,WAEvBR,EAAJS,OAAAC,KAAAC,MAAAX,EAAAS,QAEI,IAAIG,EAAiBZ,EAAzB,QAAAA,EAAAa,QAA0D,EAElDC,EAAad,EAArBS,OAAAG,EAAAA,EAAAZ,EAAAS,OAEQT,EAARS,OAAAG,GAEMG,QAAQC,IAAI,wFAGd,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAWG,IAE7BjB,EAANI,UAAAc,KAAAlB,EAAAE,UAKI,IAAK,IAFDiB,EAAaP,EAAgBZ,EAArCS,OAEaW,EAAI,EAAGA,EAAID,EAAYC,IAE9BpB,EAANI,UAAAc,KAAAlB,EAAAG,WAGIH,EAAJK,kBAAAL,EAAAI,UAEIW,QAAQC,IAAIhB,EAAhBI,YAGAH,KAAAoB,cAA8B,SAAUP,GAEpC,IAAKd,EAATsB,SAAA,CACM,IAAIV,EAAiBZ,EAA3B,QAAAA,EAAAa,QAA4D,EAEtDC,EAAaA,EAAYF,EAAiBA,EAAgBE,EAE1DA,EAAYJ,KAAKC,MAAMG,GAEvBd,EAANS,OAAAK,EAIMd,EAANI,aAEM,IAAK,IAAIa,EAAI,EAAGA,EAAIH,EAAWG,IAE7BjB,EAARI,UAAAc,KAAAlB,EAAAE,UAKM,IAAK,IAFDiB,EAAaP,EAAgBE,EAExBM,EAAI,EAAGA,EAAID,EAAYC,IAE9BpB,EAARI,UAAAc,KAAAlB,EAAAG,WAGMH,EAANM,cAAAiB,KAAAT,GAEMd,EAANK,kBAAAL,EAAAI,YAKAH,KAAAuB,aAA6B,SAA7BC,GAEI,IAAKzB,EAATsB,SAAA,CACM,IAAIV,EAAiBZ,EAA3B,QAAAA,EAAAa,QAA4D,EAEtDb,EAANI,aAEM,IAAK,IAAIa,EAAI,EAAGA,EAAIQ,EAAeR,IAEjCjB,EAARI,UAAAc,KAAAlB,EAAAE,UAKM,IAAK,IAFDiB,EAAaP,EAAgBa,EAExBL,EAAI,EAAGA,EAAID,EAAYC,IAE9BpB,EAARI,UAAAc,KAAAlB,EAAAG,WAGMH,EAAN0B,qBAAAD,IAUAxB,KAAA0B,cAA8B,SAA9BC,KAMA3B,KAAA4B,UAAqB,SAArBC,KAKA7B,KAAA8B,iBAAiC,WAE7B/B,EAAJI,UAAAJ,EAAAK,0BAnHEN,EAAFiC,UAAAC,SAAA,WAEIhC,KAAKO,mBAGPT,EAAFiC,UAAAE,YAAA,kBA/CAnC,EAAAoC,aACAC,KAAAC,EAAAA,UAAAC,OACEC,SAAU,g3BAWZ1B,UAAAuB,KAAAI,EAAAA,QACAlB,WAAAc,KAAWI,EAAAA,yCAOX,IAAAC,EAAA,+BAAA,GAYAA,EAAAN,aACAC,KAAAM,EAAAA,SAAAJ,OACAK,SACAC,EAAAA,cAGAC"
}
